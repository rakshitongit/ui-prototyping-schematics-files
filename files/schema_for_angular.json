{
  "$schema": "https://json.schemastore.org/jsconfig",
  "$id": "http://example.com/example.json",
  "type": "object",
  "default": {},
  "title": "Angular Schematics Schema",
  "description": "This file is used to vaidate the JSON schema for autogeneration of the angular components using Angular schematics",
  "required": ["schemaForAngular"],
  "definitions": {
    "view": {
      "type": "object",
      "required": ["name"],
      "properties": {
        "name": {
          "type": "string",
          "default": "",
          "title": "The View name",
          "description": "The name of the view, this is usually a unique name",
          "examples": ["Streaming Application"]
        },
        "isMaster": {
          "type": "boolean",
          "default": false,
          "title": "If the view is master view",
          "description": "True if the view is master",
          "examples": ["Streaming Application"]
        },
        "parentId": {
          "type": "string",
          "default": "",
          "title": "Parent id if there is one or null",
          "description": "Parent id",
          "examples": ["Streaming Application"]
        },
        "elements": {
          "items": {
            "$ref": "#/definitions/ComponentContainer"
          },
          "type": "array",
          "description": "This field describes the elements which needs to be added in a view"
        },
        "children": {
          "items": {
            "$ref": "#/definitions/view"
          },
          "type": "array",
          "description": "Views which are children of a feature"
        },
        "type": {
          "$ref": "#/definitions/ContainerType",
          "default": "VIEW",
          "title": "The type Schema",
          "description": "This field specifies if the view is view or a component",
          "examples": ["VIEW"]
        },
        "cssProperty": {
          "$type": "object",
          "default": {},
          "title": "The css property",
          "description": "This field specifies css properties of view",
          "examples": [{}]
        }
      }
    },
    "ContainerType": {
      "enum": ["VIEW", "COMPONENT"],
      "type": "string"
    },
    "ComponentContainer": {
      "type": "object",
      "required": ["name"],
      "properties": {
        "name": {
          "type": "string",
          "title": "The ui component name"
        },
        "property": {
          "type": "object",
          "title": "Default value"
        },
        "type": {
          "$ref": "#/definitions/ContainerType",
          "default": "VIEW",
          "title": "The type Schema",
          "description": "This field specifies if the view is view or a component",
          "examples": ["VIEW"]
        },
        "cssProperty": {
          "$type": "object",
          "default": {},
          "title": "The css property",
          "description": "This field specifies css properties of view",
          "examples": [{}]
        },
        "interactions": {
          "items": {
            "$ref": "#/definitions/Interactions"
          },
          "type": "array",
          "description": "For interactions of the UI elements"
        }
      }
    },
    "Interactions": {
      "type": "object",
      "properties": {
        "connectionId": {
          "type": "string",
          "title": "Connection id of the view which is linked"
        },
        "action": {
          "$ref": "#/definitions/Actions",
          "default": "NAVIGATE",
          "title": "The action Schema",
          "description": "This field specifies if the element is for navigation or opening a component",
          "examples": ["NAVIGATE"]
        },
        "connector": {
          "$ref": "#/definitions/Connectors",
          "default": "VIEW",
          "title": "The connector Schema",
          "description": "This field specifies if the element is for navigation to view or opening a component",
          "examples": ["VIEW"]
        }
      }
    },
    "Actions": {
      "enum": ["NAVIGATE", "OPEN"],
      "type": "string"
    },
    "Connectors": {
      "enum": ["VIEW", "COMPONENT"],
      "type": "string"
    }
  },
  "properties": {
    "schemaForAngular": {
      "$ref": "#/definitions/view"
    }
  }
}
